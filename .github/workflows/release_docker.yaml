---
name: Docker Publish

env:
  DOCKER_ORG: elixircloud
  REGISTRY: docker.io
  PLATFORM: linux/amd64,linux/arm64

on:
  push:
    tags:
      - 'hub-v*'
      - 'notebook-v*'

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set image type
        id: image
        run: |
          if [[ ${{ github.ref_name }} == hub-v* ]]; then
            echo "type=hub" >> $GITHUB_OUTPUT
            echo "type_display=Hub" >> $GITHUB_OUTPUT
          else
            echo "type=notebook" >> $GITHUB_OUTPUT
            echo "type_display=Notebook" >> $GITHUB_OUTPUT
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        env:
          TAG: ${{ github.ref_name }}
        with:
          images: ${{ env.REGISTRY }}/${{ env.DOCKER_ORG }}/jupyterhub-${{ steps.image.outputs.type }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ github.ref_name }}
            type=semver,pattern={{version}},value=${{ github.ref_name }}
          labels: |
            org.opencontainers.image.title=JupyterHub ${{ steps.image.outputs.type_display }} Image
            org.opencontainers.image.description=Custom ${{ steps.image.outputs.type_display }} image for JupyterHub deployment
            org.opencontainers.image.vendor=${{ env.DOCKER_ORG }}
            org.opencontainers.image.version=${{ github.ref_name }}
            org.opencontainers.image.created={{date 'yyyy-MM-dd'}}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.documentation=${{ github.event.repository.html_url }}/blob/main/jupyterhub/${{ steps.image.outputs.type }}/README.md
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}

      - name: Set build context
        id: context
        run: echo "dockerfile=jupyterhub/${{ steps.image.outputs.type }}/${{ steps.image.outputs.type }}.Dockerfile" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ steps.context.outputs.dockerfile }}
          platforms: ${{ env.PLATFORM }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            CHANGELOG.${{ steps.image.outputs.type }}.md
          body_path: CHANGELOG.${{ steps.image.outputs.type }}.md
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
...
