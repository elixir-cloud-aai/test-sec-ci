---
name: Vulnerability test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 12 * * 1' # Runs every Monday at 12:00 PM UTC

jobs:
  # code-vulnerabilities:
  #   name: Code
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out repository
  #       uses: actions/checkout@v4

  #     - name: Harden-Runner
  #       uses: step-security/harden-runner@v2.10.2

  #     - name: Set up environment
  #       uses: ./.github/actions/setup/poetry
  #       with:
  #         os: ${{ job.os }}
  #         python-version: '3.13.0'
  #         poetry-install-options: "--only=vulnerability --no-root"
  #         poetry-export-options: "--only=vulnerability"

  #     - name: Check code vulnerabilities with bandit
  #       run: poetry run bandit -c pyproject.toml -r jupyterhub/

  # dependency-vulnerabilities:
  #   name: Dependencies
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out repository
  #       uses: actions/checkout@v4

  #     - name: Harden-Runner
  #       uses: step-security/harden-runner@v2.10.2

  #     - name: Set up environment
  #       uses: ./.github/actions/setup/poetry
  #       with:
  #         os: ${{ job.os }}
  #         python-version: '3.13.0'
  #         poetry-install-options: "--only=vulnerability --no-root"
  #         poetry-export-options: "--only=vulnerability"

  #     - name: Check dependency vulnerabilities with safety
  #       run: poetry run safety check --full-report

  trivy:
    name: Container Scan
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      matrix:
        dockerfile:
          - jupyterhub/hub/hub.Dockerfile
          - jupyterhub/notebook/notebook.Dockerfile
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # - name: Harden-Runner
      #   uses: step-security/harden-runner@v2.10.2

      - name: Set image name
        # yamllint disable rule:line-length
        run: |
          IMAGE_NAME="$(basename '${{ matrix.dockerfile }}' | sed 's/.Dockerfile//'):${{github.sha}}"
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
        # yamllint enable rule:line-length

      - name: Build Docker image
        run: docker build -t ${{env.IMAGE_NAME}} -f ${{ matrix.dockerfile }} .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ env.IMAGE_NAME }}
          format: 'sarif'
          output: 'trivy-results-${{ env.IMAGE_NAME }}.sarif'
          severity: 'CRITICAL,HIGH'
          timeout: '10m'
          ignore-unfixed: true

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results-${{ env.IMAGE_NAME }}.sarif'
          category: 'trivy-${{ env.IMAGE_NAME }}'
...
